"""Initial shared database schema

Revision ID: 07d69ec8e6ee
Revises: 
Create Date: 2025-07-09 09:20:25.153461

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from indexer.database.types import EvmAddressType, EvmHashType, DomainEventIdType

# revision identifiers, used by Alembic.
revision = '07d69ec8e6ee'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', EvmAddressType(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('project', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('grouping', sa.String(length=255), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    op.create_index('idx_addresses_address', 'addresses', ['address'], unique=False)
    op.create_index('idx_addresses_grouping', 'addresses', ['grouping'], unique=False)
    op.create_index('idx_addresses_project', 'addresses', ['project'], unique=False)
    op.create_index('idx_addresses_status', 'addresses', ['status'], unique=False)
    op.create_index('idx_addresses_type', 'addresses', ['type'], unique=False)
    op.create_table('block_prices',
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.Column('price_usd', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('chainlink_round_id', sa.NUMERIC(precision=20, scale=0), nullable=True),
    sa.Column('chainlink_updated_at', sa.Integer(), nullable=True),
    sa.Column('fetched_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('block_number')
    )
    op.create_index('idx_block_prices_fetched_at', 'block_prices', ['fetched_at'], unique=False)
    op.create_index('idx_block_prices_price', 'block_prices', ['price_usd'], unique=False)
    op.create_index('idx_block_prices_timestamp', 'block_prices', ['timestamp'], unique=False)
    op.create_index(op.f('ix_block_prices_timestamp'), 'block_prices', ['timestamp'], unique=False)
    op.create_table('block_processing',
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('block_hash', EvmHashType(), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.Column('transaction_count', sa.Integer(), nullable=False),
    sa.Column('transactions_pending', sa.Integer(), nullable=False),
    sa.Column('transactions_processing', sa.Integer(), nullable=False),
    sa.Column('transactions_complete', sa.Integer(), nullable=False),
    sa.Column('transactions_failed', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_block_processing_block_hash'), 'block_processing', ['block_hash'], unique=False)
    op.create_index(op.f('ix_block_processing_block_number'), 'block_processing', ['block_number'], unique=True)
    op.create_index(op.f('ix_block_processing_timestamp'), 'block_processing', ['timestamp'], unique=False)
    op.create_table('contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', EvmAddressType(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('project', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('abi_dir', sa.String(length=255), nullable=True),
    sa.Column('abi_file', sa.String(length=255), nullable=True),
    sa.Column('transformer_name', sa.String(length=255), nullable=True),
    sa.Column('transformer_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('pricing_strategy_default', sa.String(length=50), nullable=True),
    sa.Column('quote_token_address', EvmAddressType(), nullable=True),
    sa.Column('pricing_start_block', sa.Integer(), nullable=True),
    sa.Column('pricing_end_block', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    op.create_index('idx_contracts_address', 'contracts', ['address'], unique=False)
    op.create_index('idx_contracts_pricing_strategy', 'contracts', ['pricing_strategy_default'], unique=False)
    op.create_index('idx_contracts_project', 'contracts', ['project'], unique=False)
    op.create_index('idx_contracts_status', 'contracts', ['status'], unique=False)
    op.create_index('idx_contracts_type', 'contracts', ['type'], unique=False)
    op.create_table('event_details',
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('denom', sa.Enum('USD', 'AVAX', name='pricingdenomination'), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('content_id', 'denom', name='uq_event_detail_content_denom')
    )
    op.create_index('idx_event_detail_content_id', 'event_details', ['content_id'], unique=False)
    op.create_index('idx_event_detail_denom_value', 'event_details', ['denom', 'value'], unique=False)
    op.create_index(op.f('ix_event_details_content_id'), 'event_details', ['content_id'], unique=False)
    op.create_index(op.f('ix_event_details_denom'), 'event_details', ['denom'], unique=False)
    op.create_table('liquidity',
    sa.Column('pool', EvmAddressType(), nullable=False),
    sa.Column('provider', EvmAddressType(), nullable=False),
    sa.Column('action', sa.Enum('ADD', 'REMOVE', 'UPDATE', name='liquidityaction'), nullable=False),
    sa.Column('base_token', EvmAddressType(), nullable=False),
    sa.Column('base_amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('quote_token', EvmAddressType(), nullable=False),
    sa.Column('quote_amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('tx_hash', EvmHashType(), nullable=False),
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_index(op.f('ix_liquidity_action'), 'liquidity', ['action'], unique=False)
    op.create_index(op.f('ix_liquidity_base_token'), 'liquidity', ['base_token'], unique=False)
    op.create_index(op.f('ix_liquidity_block_number'), 'liquidity', ['block_number'], unique=False)
    op.create_index(op.f('ix_liquidity_pool'), 'liquidity', ['pool'], unique=False)
    op.create_index(op.f('ix_liquidity_provider'), 'liquidity', ['provider'], unique=False)
    op.create_index(op.f('ix_liquidity_quote_token'), 'liquidity', ['quote_token'], unique=False)
    op.create_index(op.f('ix_liquidity_timestamp'), 'liquidity', ['timestamp'], unique=False)
    op.create_index(op.f('ix_liquidity_tx_hash'), 'liquidity', ['tx_hash'], unique=False)
    op.create_table('models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('database_name', sa.String(length=255), nullable=False),
    sa.Column('source_paths', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('database_name'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_models_name', 'models', ['name'], unique=False)
    op.create_index('idx_models_status', 'models', ['status'], unique=False)
    op.create_index('idx_models_version', 'models', ['version'], unique=False)
    op.create_table('periods',
    sa.Column('period_type', sa.String(length=10), nullable=False),
    sa.Column('time_open', sa.Integer(), nullable=False),
    sa.Column('time_close', sa.Integer(), nullable=False),
    sa.Column('block_open', sa.Integer(), nullable=False),
    sa.Column('block_close', sa.Integer(), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('period_type', 'time_open')
    )
    op.create_index('idx_periods_blocks', 'periods', ['block_open', 'block_close'], unique=False)
    op.create_index('idx_periods_complete', 'periods', ['is_complete'], unique=False)
    op.create_index('idx_periods_type_time', 'periods', ['period_type', 'time_open'], unique=False)
    op.create_index(op.f('ix_periods_block_close'), 'periods', ['block_close'], unique=False)
    op.create_index(op.f('ix_periods_block_open'), 'periods', ['block_open'], unique=False)
    op.create_table('pool_swap_details',
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('denom', sa.Enum('USD', 'AVAX', name='pricingdenomination'), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('price_method', sa.Enum('DIRECT_AVAX', 'DIRECT_USD', 'GLOBAL', 'ERROR', name='pricingmethod'), nullable=False),
    sa.Column('price_config_id', sa.Integer(), nullable=True),
    sa.Column('calculated_at', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('content_id', 'denom', name='uq_pool_swap_detail_content_denom')
    )
    op.create_index('idx_pool_swap_detail_calculated_at', 'pool_swap_details', ['calculated_at'], unique=False)
    op.create_index('idx_pool_swap_detail_config', 'pool_swap_details', ['price_config_id'], unique=False)
    op.create_index('idx_pool_swap_detail_content_id', 'pool_swap_details', ['content_id'], unique=False)
    op.create_index('idx_pool_swap_detail_denom_value', 'pool_swap_details', ['denom', 'value'], unique=False)
    op.create_index('idx_pool_swap_detail_method', 'pool_swap_details', ['price_method'], unique=False)
    op.create_index(op.f('ix_pool_swap_details_calculated_at'), 'pool_swap_details', ['calculated_at'], unique=False)
    op.create_index(op.f('ix_pool_swap_details_content_id'), 'pool_swap_details', ['content_id'], unique=False)
    op.create_index(op.f('ix_pool_swap_details_denom'), 'pool_swap_details', ['denom'], unique=False)
    op.create_index(op.f('ix_pool_swap_details_price_method'), 'pool_swap_details', ['price_method'], unique=False)
    op.create_table('pool_swaps',
    sa.Column('pool', EvmAddressType(), nullable=False),
    sa.Column('taker', EvmAddressType(), nullable=False),
    sa.Column('direction', sa.Enum('BUY', 'SELL', name='tradedirection'), nullable=False),
    sa.Column('base_token', EvmAddressType(), nullable=False),
    sa.Column('base_amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('quote_token', EvmAddressType(), nullable=False),
    sa.Column('quote_amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('trade_id', DomainEventIdType(), nullable=True),
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('tx_hash', EvmHashType(), nullable=False),
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_index(op.f('ix_pool_swaps_base_token'), 'pool_swaps', ['base_token'], unique=False)
    op.create_index(op.f('ix_pool_swaps_block_number'), 'pool_swaps', ['block_number'], unique=False)
    op.create_index(op.f('ix_pool_swaps_direction'), 'pool_swaps', ['direction'], unique=False)
    op.create_index(op.f('ix_pool_swaps_pool'), 'pool_swaps', ['pool'], unique=False)
    op.create_index(op.f('ix_pool_swaps_quote_token'), 'pool_swaps', ['quote_token'], unique=False)
    op.create_index(op.f('ix_pool_swaps_taker'), 'pool_swaps', ['taker'], unique=False)
    op.create_index(op.f('ix_pool_swaps_timestamp'), 'pool_swaps', ['timestamp'], unique=False)
    op.create_index(op.f('ix_pool_swaps_trade_id'), 'pool_swaps', ['trade_id'], unique=False)
    op.create_index(op.f('ix_pool_swaps_tx_hash'), 'pool_swaps', ['tx_hash'], unique=False)
    op.create_table('positions',
    sa.Column('user', EvmAddressType(), nullable=False),
    sa.Column('custodian', EvmAddressType(), nullable=True),
    sa.Column('token', EvmAddressType(), nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('token_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', DomainEventIdType(), nullable=True),
    sa.Column('parent_type', sa.String(length=50), nullable=True),
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('tx_hash', EvmHashType(), nullable=False),
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_index(op.f('ix_positions_block_number'), 'positions', ['block_number'], unique=False)
    op.create_index(op.f('ix_positions_custodian'), 'positions', ['custodian'], unique=False)
    op.create_index(op.f('ix_positions_parent_id'), 'positions', ['parent_id'], unique=False)
    op.create_index(op.f('ix_positions_parent_type'), 'positions', ['parent_type'], unique=False)
    op.create_index(op.f('ix_positions_timestamp'), 'positions', ['timestamp'], unique=False)
    op.create_index(op.f('ix_positions_token'), 'positions', ['token'], unique=False)
    op.create_index(op.f('ix_positions_tx_hash'), 'positions', ['tx_hash'], unique=False)
    op.create_index(op.f('ix_positions_user'), 'positions', ['user'], unique=False)
    op.create_table('processing_jobs',
    sa.Column('job_type', sa.Enum('BLOCK', 'BLOCK_RANGE', 'TRANSACTIONS', 'REPROCESS_FAILED', name='jobtype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETE', 'FAILED', name='jobstatus'), nullable=False),
    sa.Column('job_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('worker_id', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_job_queue_pickup', 'processing_jobs', ['status', 'priority', 'created_at'], unique=False)
    op.create_index('idx_job_type_status', 'processing_jobs', ['job_type', 'status'], unique=False)
    op.create_index('idx_job_worker_status', 'processing_jobs', ['worker_id', 'status'], unique=False)
    op.create_index(op.f('ix_processing_jobs_job_type'), 'processing_jobs', ['job_type'], unique=False)
    op.create_index(op.f('ix_processing_jobs_priority'), 'processing_jobs', ['priority'], unique=False)
    op.create_index(op.f('ix_processing_jobs_status'), 'processing_jobs', ['status'], unique=False)
    op.create_index(op.f('ix_processing_jobs_worker_id'), 'processing_jobs', ['worker_id'], unique=False)
    op.create_table('rewards',
    sa.Column('contract', EvmAddressType(), nullable=False),
    sa.Column('recipient', EvmAddressType(), nullable=False),
    sa.Column('token', EvmAddressType(), nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('reward_type', sa.Enum('FEES', 'REWARDS', name='rewardtype'), nullable=False),
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('tx_hash', EvmHashType(), nullable=False),
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_index(op.f('ix_rewards_block_number'), 'rewards', ['block_number'], unique=False)
    op.create_index(op.f('ix_rewards_contract'), 'rewards', ['contract'], unique=False)
    op.create_index(op.f('ix_rewards_recipient'), 'rewards', ['recipient'], unique=False)
    op.create_index(op.f('ix_rewards_reward_type'), 'rewards', ['reward_type'], unique=False)
    op.create_index(op.f('ix_rewards_timestamp'), 'rewards', ['timestamp'], unique=False)
    op.create_index(op.f('ix_rewards_token'), 'rewards', ['token'], unique=False)
    op.create_index(op.f('ix_rewards_tx_hash'), 'rewards', ['tx_hash'], unique=False)
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('path', sa.String(length=500), nullable=False),
    sa.Column('format', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sources_name', 'sources', ['name'], unique=False)
    op.create_index('idx_sources_status', 'sources', ['status'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', EvmAddressType(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('decimals', sa.Integer(), nullable=True),
    sa.Column('project', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    op.create_index('idx_tokens_address', 'tokens', ['address'], unique=False)
    op.create_index('idx_tokens_project', 'tokens', ['project'], unique=False)
    op.create_index('idx_tokens_status', 'tokens', ['status'], unique=False)
    op.create_index('idx_tokens_symbol', 'tokens', ['symbol'], unique=False)
    op.create_index('idx_tokens_type', 'tokens', ['type'], unique=False)
    op.create_table('trade_details',
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('denom', sa.Enum('USD', 'AVAX', name='pricingdenomination'), nullable=False),
    sa.Column('value', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('pricing_method', sa.Enum('DIRECT', 'GLOBAL', name='tradepricingmethod'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('content_id', 'denom', name='uq_trade_detail_content_denom')
    )
    op.create_index('idx_trade_detail_content_id', 'trade_details', ['content_id'], unique=False)
    op.create_index('idx_trade_detail_denom_value', 'trade_details', ['denom', 'value'], unique=False)
    op.create_index('idx_trade_detail_pricing_method', 'trade_details', ['pricing_method'], unique=False)
    op.create_index(op.f('ix_trade_details_content_id'), 'trade_details', ['content_id'], unique=False)
    op.create_index(op.f('ix_trade_details_denom'), 'trade_details', ['denom'], unique=False)
    op.create_index(op.f('ix_trade_details_pricing_method'), 'trade_details', ['pricing_method'], unique=False)
    op.create_table('trades',
    sa.Column('taker', EvmAddressType(), nullable=False),
    sa.Column('direction', sa.Enum('BUY', 'SELL', name='tradedirection'), nullable=False),
    sa.Column('base_token', EvmAddressType(), nullable=False),
    sa.Column('base_amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('trade_type', sa.Enum('TRADE', 'ARBITRAGE', 'AUCTION', name='tradetype'), nullable=False),
    sa.Column('router', EvmAddressType(), nullable=True),
    sa.Column('swap_count', sa.Integer(), nullable=True),
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('tx_hash', EvmHashType(), nullable=False),
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_index(op.f('ix_trades_base_token'), 'trades', ['base_token'], unique=False)
    op.create_index(op.f('ix_trades_block_number'), 'trades', ['block_number'], unique=False)
    op.create_index(op.f('ix_trades_direction'), 'trades', ['direction'], unique=False)
    op.create_index(op.f('ix_trades_router'), 'trades', ['router'], unique=False)
    op.create_index(op.f('ix_trades_taker'), 'trades', ['taker'], unique=False)
    op.create_index(op.f('ix_trades_timestamp'), 'trades', ['timestamp'], unique=False)
    op.create_index(op.f('ix_trades_trade_type'), 'trades', ['trade_type'], unique=False)
    op.create_index(op.f('ix_trades_tx_hash'), 'trades', ['tx_hash'], unique=False)
    op.create_table('transaction_processing',
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('tx_hash', EvmHashType(), nullable=False),
    sa.Column('tx_index', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='transactionstatus'), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('last_processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('gas_used', sa.BigInteger(), nullable=True),
    sa.Column('gas_price', sa.BigInteger(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('logs_processed', sa.Integer(), nullable=False),
    sa.Column('events_generated', sa.Integer(), nullable=False),
    sa.Column('signals_generated', sa.Integer(), nullable=True),
    sa.Column('positions_generated', sa.Integer(), nullable=True),
    sa.Column('tx_success', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_processing_block_number'), 'transaction_processing', ['block_number'], unique=False)
    op.create_index(op.f('ix_transaction_processing_status'), 'transaction_processing', ['status'], unique=False)
    op.create_index(op.f('ix_transaction_processing_timestamp'), 'transaction_processing', ['timestamp'], unique=False)
    op.create_index(op.f('ix_transaction_processing_tx_hash'), 'transaction_processing', ['tx_hash'], unique=True)
    op.create_table('transfers',
    sa.Column('token', EvmAddressType(), nullable=False),
    sa.Column('from_address', EvmAddressType(), nullable=False),
    sa.Column('to_address', EvmAddressType(), nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=78, scale=0), nullable=False),
    sa.Column('parent_id', DomainEventIdType(), nullable=True),
    sa.Column('parent_type', sa.String(length=50), nullable=True),
    sa.Column('classification', sa.String(length=50), nullable=True),
    sa.Column('content_id', DomainEventIdType(), nullable=False),
    sa.Column('tx_hash', EvmHashType(), nullable=False),
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_index(op.f('ix_transfers_block_number'), 'transfers', ['block_number'], unique=False)
    op.create_index(op.f('ix_transfers_classification'), 'transfers', ['classification'], unique=False)
    op.create_index(op.f('ix_transfers_from_address'), 'transfers', ['from_address'], unique=False)
    op.create_index(op.f('ix_transfers_parent_id'), 'transfers', ['parent_id'], unique=False)
    op.create_index(op.f('ix_transfers_parent_type'), 'transfers', ['parent_type'], unique=False)
    op.create_index(op.f('ix_transfers_timestamp'), 'transfers', ['timestamp'], unique=False)
    op.create_index(op.f('ix_transfers_to_address'), 'transfers', ['to_address'], unique=False)
    op.create_index(op.f('ix_transfers_token'), 'transfers', ['token'], unique=False)
    op.create_index(op.f('ix_transfers_tx_hash'), 'transfers', ['tx_hash'], unique=False)
    op.create_table('model_contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_id', 'contract_id')
    )
    op.create_index('idx_model_contracts_contract_id', 'model_contracts', ['contract_id'], unique=False)
    op.create_index('idx_model_contracts_model_id', 'model_contracts', ['model_id'], unique=False)
    op.create_table('model_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_id', 'source_id', name='uq_model_source')
    )
    op.create_index('idx_model_sources_model_id', 'model_sources', ['model_id'], unique=False)
    op.create_index('idx_model_sources_source_id', 'model_sources', ['source_id'], unique=False)
    op.create_table('model_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('token_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_id', 'token_id')
    )
    op.create_index('idx_model_tokens_model_id', 'model_tokens', ['model_id'], unique=False)
    op.create_index('idx_model_tokens_token_id', 'model_tokens', ['token_id'], unique=False)
    op.create_table('pool_pricing_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('start_block', sa.Integer(), nullable=False),
    sa.Column('end_block', sa.Integer(), nullable=True),
    sa.Column('pricing_strategy', sa.String(length=50), nullable=False),
    sa.Column('pricing_pool', sa.Boolean(), nullable=False),
    sa.Column('quote_token_address', EvmAddressType(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pool_pricing_blocks', 'pool_pricing_configs', ['start_block', 'end_block'], unique=False)
    op.create_index('idx_pool_pricing_model_contract', 'pool_pricing_configs', ['model_id', 'contract_id'], unique=False)
    op.create_index('idx_pool_pricing_pricing_pool', 'pool_pricing_configs', ['model_id', 'pricing_pool', 'start_block', 'end_block'], unique=False)
    op.create_index('idx_pool_pricing_strategy', 'pool_pricing_configs', ['pricing_strategy'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_pool_pricing_strategy', table_name='pool_pricing_configs')
    op.drop_index('idx_pool_pricing_pricing_pool', table_name='pool_pricing_configs')
    op.drop_index('idx_pool_pricing_model_contract', table_name='pool_pricing_configs')
    op.drop_index('idx_pool_pricing_blocks', table_name='pool_pricing_configs')
    op.drop_table('pool_pricing_configs')
    op.drop_index('idx_model_tokens_token_id', table_name='model_tokens')
    op.drop_index('idx_model_tokens_model_id', table_name='model_tokens')
    op.drop_table('model_tokens')
    op.drop_index('idx_model_sources_source_id', table_name='model_sources')
    op.drop_index('idx_model_sources_model_id', table_name='model_sources')
    op.drop_table('model_sources')
    op.drop_index('idx_model_contracts_model_id', table_name='model_contracts')
    op.drop_index('idx_model_contracts_contract_id', table_name='model_contracts')
    op.drop_table('model_contracts')
    op.drop_index(op.f('ix_transfers_tx_hash'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_token'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_to_address'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_timestamp'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_parent_type'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_parent_id'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_from_address'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_classification'), table_name='transfers')
    op.drop_index(op.f('ix_transfers_block_number'), table_name='transfers')
    op.drop_table('transfers')
    op.drop_index(op.f('ix_transaction_processing_tx_hash'), table_name='transaction_processing')
    op.drop_index(op.f('ix_transaction_processing_timestamp'), table_name='transaction_processing')
    op.drop_index(op.f('ix_transaction_processing_status'), table_name='transaction_processing')
    op.drop_index(op.f('ix_transaction_processing_block_number'), table_name='transaction_processing')
    op.drop_table('transaction_processing')
    op.drop_index(op.f('ix_trades_tx_hash'), table_name='trades')
    op.drop_index(op.f('ix_trades_trade_type'), table_name='trades')
    op.drop_index(op.f('ix_trades_timestamp'), table_name='trades')
    op.drop_index(op.f('ix_trades_taker'), table_name='trades')
    op.drop_index(op.f('ix_trades_router'), table_name='trades')
    op.drop_index(op.f('ix_trades_direction'), table_name='trades')
    op.drop_index(op.f('ix_trades_block_number'), table_name='trades')
    op.drop_index(op.f('ix_trades_base_token'), table_name='trades')
    op.drop_table('trades')
    op.drop_index(op.f('ix_trade_details_pricing_method'), table_name='trade_details')
    op.drop_index(op.f('ix_trade_details_denom'), table_name='trade_details')
    op.drop_index(op.f('ix_trade_details_content_id'), table_name='trade_details')
    op.drop_index('idx_trade_detail_pricing_method', table_name='trade_details')
    op.drop_index('idx_trade_detail_denom_value', table_name='trade_details')
    op.drop_index('idx_trade_detail_content_id', table_name='trade_details')
    op.drop_table('trade_details')
    op.drop_index('idx_tokens_type', table_name='tokens')
    op.drop_index('idx_tokens_symbol', table_name='tokens')
    op.drop_index('idx_tokens_status', table_name='tokens')
    op.drop_index('idx_tokens_project', table_name='tokens')
    op.drop_index('idx_tokens_address', table_name='tokens')
    op.drop_table('tokens')
    op.drop_index('idx_sources_status', table_name='sources')
    op.drop_index('idx_sources_name', table_name='sources')
    op.drop_table('sources')
    op.drop_index(op.f('ix_rewards_tx_hash'), table_name='rewards')
    op.drop_index(op.f('ix_rewards_token'), table_name='rewards')
    op.drop_index(op.f('ix_rewards_timestamp'), table_name='rewards')
    op.drop_index(op.f('ix_rewards_reward_type'), table_name='rewards')
    op.drop_index(op.f('ix_rewards_recipient'), table_name='rewards')
    op.drop_index(op.f('ix_rewards_contract'), table_name='rewards')
    op.drop_index(op.f('ix_rewards_block_number'), table_name='rewards')
    op.drop_table('rewards')
    op.drop_index(op.f('ix_processing_jobs_worker_id'), table_name='processing_jobs')
    op.drop_index(op.f('ix_processing_jobs_status'), table_name='processing_jobs')
    op.drop_index(op.f('ix_processing_jobs_priority'), table_name='processing_jobs')
    op.drop_index(op.f('ix_processing_jobs_job_type'), table_name='processing_jobs')
    op.drop_index('idx_job_worker_status', table_name='processing_jobs')
    op.drop_index('idx_job_type_status', table_name='processing_jobs')
    op.drop_index('idx_job_queue_pickup', table_name='processing_jobs')
    op.drop_table('processing_jobs')
    op.drop_index(op.f('ix_positions_user'), table_name='positions')
    op.drop_index(op.f('ix_positions_tx_hash'), table_name='positions')
    op.drop_index(op.f('ix_positions_token'), table_name='positions')
    op.drop_index(op.f('ix_positions_timestamp'), table_name='positions')
    op.drop_index(op.f('ix_positions_parent_type'), table_name='positions')
    op.drop_index(op.f('ix_positions_parent_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_custodian'), table_name='positions')
    op.drop_index(op.f('ix_positions_block_number'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_pool_swaps_tx_hash'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_trade_id'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_timestamp'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_taker'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_quote_token'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_pool'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_direction'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_block_number'), table_name='pool_swaps')
    op.drop_index(op.f('ix_pool_swaps_base_token'), table_name='pool_swaps')
    op.drop_table('pool_swaps')
    op.drop_index(op.f('ix_pool_swap_details_price_method'), table_name='pool_swap_details')
    op.drop_index(op.f('ix_pool_swap_details_denom'), table_name='pool_swap_details')
    op.drop_index(op.f('ix_pool_swap_details_content_id'), table_name='pool_swap_details')
    op.drop_index(op.f('ix_pool_swap_details_calculated_at'), table_name='pool_swap_details')
    op.drop_index('idx_pool_swap_detail_method', table_name='pool_swap_details')
    op.drop_index('idx_pool_swap_detail_denom_value', table_name='pool_swap_details')
    op.drop_index('idx_pool_swap_detail_content_id', table_name='pool_swap_details')
    op.drop_index('idx_pool_swap_detail_config', table_name='pool_swap_details')
    op.drop_index('idx_pool_swap_detail_calculated_at', table_name='pool_swap_details')
    op.drop_table('pool_swap_details')
    op.drop_index(op.f('ix_periods_block_open'), table_name='periods')
    op.drop_index(op.f('ix_periods_block_close'), table_name='periods')
    op.drop_index('idx_periods_type_time', table_name='periods')
    op.drop_index('idx_periods_complete', table_name='periods')
    op.drop_index('idx_periods_blocks', table_name='periods')
    op.drop_table('periods')
    op.drop_index('idx_models_version', table_name='models')
    op.drop_index('idx_models_status', table_name='models')
    op.drop_index('idx_models_name', table_name='models')
    op.drop_table('models')
    op.drop_index(op.f('ix_liquidity_tx_hash'), table_name='liquidity')
    op.drop_index(op.f('ix_liquidity_timestamp'), table_name='liquidity')
    op.drop_index(op.f('ix_liquidity_quote_token'), table_name='liquidity')
    op.drop_index(op.f('ix_liquidity_provider'), table_name='liquidity')
    op.drop_index(op.f('ix_liquidity_pool'), table_name='liquidity')
    op.drop_index(op.f('ix_liquidity_block_number'), table_name='liquidity')
    op.drop_index(op.f('ix_liquidity_base_token'), table_name='liquidity')
    op.drop_index(op.f('ix_liquidity_action'), table_name='liquidity')
    op.drop_table('liquidity')
    op.drop_index(op.f('ix_event_details_denom'), table_name='event_details')
    op.drop_index(op.f('ix_event_details_content_id'), table_name='event_details')
    op.drop_index('idx_event_detail_denom_value', table_name='event_details')
    op.drop_index('idx_event_detail_content_id', table_name='event_details')
    op.drop_table('event_details')
    op.drop_index('idx_contracts_type', table_name='contracts')
    op.drop_index('idx_contracts_status', table_name='contracts')
    op.drop_index('idx_contracts_project', table_name='contracts')
    op.drop_index('idx_contracts_pricing_strategy', table_name='contracts')
    op.drop_index('idx_contracts_address', table_name='contracts')
    op.drop_table('contracts')
    op.drop_index(op.f('ix_block_processing_timestamp'), table_name='block_processing')
    op.drop_index(op.f('ix_block_processing_block_number'), table_name='block_processing')
    op.drop_index(op.f('ix_block_processing_block_hash'), table_name='block_processing')
    op.drop_table('block_processing')
    op.drop_index(op.f('ix_block_prices_timestamp'), table_name='block_prices')
    op.drop_index('idx_block_prices_timestamp', table_name='block_prices')
    op.drop_index('idx_block_prices_price', table_name='block_prices')
    op.drop_index('idx_block_prices_fetched_at', table_name='block_prices')
    op.drop_table('block_prices')
    op.drop_index('idx_addresses_type', table_name='addresses')
    op.drop_index('idx_addresses_status', table_name='addresses')
    op.drop_index('idx_addresses_project', table_name='addresses')
    op.drop_index('idx_addresses_grouping', table_name='addresses')
    op.drop_index('idx_addresses_address', table_name='addresses')
    op.drop_table('addresses')
    # ### end Alembic commands ###
