"""Initial v2 schema

Revision ID: 69e567bdcfce
Revises: 
Create Date: 2025-07-16 12:10:20.061545

"""
from alembic import op
import sqlalchemy as sa
from indexer.database.types import EvmAddressType
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '69e567bdcfce'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', EvmAddressType(), nullable=False),
    sa.Column('address_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_addresses_address', 'addresses', ['address'], unique=False)
    op.create_index('idx_addresses_status', 'addresses', ['status'], unique=False)
    op.create_index('idx_addresses_type', 'addresses', ['address_type'], unique=False)
    op.create_index(op.f('ix_addresses_address'), 'addresses', ['address'], unique=False)
    op.create_table('block_prices',
    sa.Column('block_number', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.Column('price_usd', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('block_number')
    )
    op.create_index('idx_block_prices_price', 'block_prices', ['price_usd'], unique=False)
    op.create_index('idx_block_prices_timestamp', 'block_prices', ['timestamp'], unique=False)
    op.create_index(op.f('ix_block_prices_timestamp'), 'block_prices', ['timestamp'], unique=False)
    op.create_table('contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', EvmAddressType(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('project', sa.String(length=255), nullable=True),
    sa.Column('decode_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('transform_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('pricing_strategy_default', sa.String(length=50), nullable=True),
    sa.Column('base_token_address', EvmAddressType(), nullable=True),
    sa.Column('pricing_start_block', sa.Integer(), nullable=True),
    sa.Column('pricing_end_block', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_contracts_address', 'contracts', ['address'], unique=False)
    op.create_index('idx_contracts_pricing_strategy', 'contracts', ['pricing_strategy_default'], unique=False)
    op.create_index('idx_contracts_project', 'contracts', ['project'], unique=False)
    op.create_index('idx_contracts_status', 'contracts', ['status'], unique=False)
    op.create_index('idx_contracts_type', 'contracts', ['type'], unique=False)
    op.create_index(op.f('ix_contracts_address'), 'contracts', ['address'], unique=True)
    op.create_table('models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target_asset', EvmAddressType(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_models_name', 'models', ['name'], unique=False)
    op.create_index('idx_models_status', 'models', ['status'], unique=False)
    op.create_index('idx_models_version', 'models', ['version'], unique=False)
    op.create_table('periods',
    sa.Column('period_type', sa.Enum('ONE_MINUTE', 'FIVE_MINUTES', 'ONE_HOUR', 'FOUR_HOURS', 'ONE_DAY', name='periodtype', native_enum=False), nullable=False),
    sa.Column('time_open', sa.Integer(), nullable=False),
    sa.Column('time_close', sa.Integer(), nullable=False),
    sa.Column('block_open', sa.Integer(), nullable=False),
    sa.Column('block_close', sa.Integer(), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('period_type', 'time_open')
    )
    op.create_index('idx_periods_blocks', 'periods', ['block_open', 'block_close'], unique=False)
    op.create_index('idx_periods_complete', 'periods', ['is_complete'], unique=False)
    op.create_index('idx_periods_type_time', 'periods', ['period_type', 'time_open'], unique=False)
    op.create_index(op.f('ix_periods_block_close'), 'periods', ['block_close'], unique=False)
    op.create_index(op.f('ix_periods_block_open'), 'periods', ['block_open'], unique=False)
    op.create_index(op.f('ix_periods_time_close'), 'periods', ['time_close'], unique=False)
    op.create_table('price_vwap',
    sa.Column('time', sa.TIMESTAMP(), nullable=False),
    sa.Column('asset', EvmAddressType(), nullable=False),
    sa.Column('denom', sa.Text(), nullable=False),
    sa.Column('base_volume', sa.NUMERIC(precision=30, scale=8), nullable=False),
    sa.Column('quote_volume', sa.NUMERIC(precision=30, scale=8), nullable=False),
    sa.Column('price_period', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('price_vwap', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('time', 'asset', 'denom')
    )
    op.create_index('idx_price_vwap_asset', 'price_vwap', ['asset'], unique=False)
    op.create_index('idx_price_vwap_asset_time', 'price_vwap', ['asset', 'time'], unique=False)
    op.create_index('idx_price_vwap_time', 'price_vwap', ['time'], unique=False)
    op.create_index('idx_price_vwap_time_desc', 'price_vwap', ['time'], unique=False, postgresql_using='btree', postgresql_ops={'time': 'DESC'})
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('path', sa.String(length=500), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sources_name', 'sources', ['name'], unique=False)
    op.create_index('idx_sources_status', 'sources', ['status'], unique=False)
    op.create_index(op.f('ix_sources_name'), 'sources', ['name'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('symbol', sa.String(length=50), nullable=False),
    sa.Column('address', EvmAddressType(), nullable=False),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('project', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tokens_address', 'tokens', ['address'], unique=False)
    op.create_index('idx_tokens_project', 'tokens', ['project'], unique=False)
    op.create_index('idx_tokens_status', 'tokens', ['status'], unique=False)
    op.create_index('idx_tokens_symbol', 'tokens', ['symbol'], unique=False)
    op.create_index('idx_tokens_type', 'tokens', ['type'], unique=False)
    op.create_index(op.f('ix_tokens_address'), 'tokens', ['address'], unique=True)
    op.create_table('model_contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_id', 'contract_id')
    )
    op.create_index('idx_model_contracts_contract_id', 'model_contracts', ['contract_id'], unique=False)
    op.create_index('idx_model_contracts_model_id', 'model_contracts', ['model_id'], unique=False)
    op.create_table('model_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_id', 'source_id')
    )
    op.create_index('idx_model_sources_model_id', 'model_sources', ['model_id'], unique=False)
    op.create_index('idx_model_sources_source_id', 'model_sources', ['source_id'], unique=False)
    op.create_table('model_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('token_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_id', 'token_id')
    )
    op.create_index('idx_model_tokens_model_id', 'model_tokens', ['model_id'], unique=False)
    op.create_index('idx_model_tokens_token_id', 'model_tokens', ['token_id'], unique=False)
    op.create_table('pool_pricing_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('start_block', sa.Integer(), nullable=False),
    sa.Column('end_block', sa.Integer(), nullable=True),
    sa.Column('pricing_strategy', sa.String(length=50), nullable=False),
    sa.Column('pricing_pool', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pool_pricing_blocks', 'pool_pricing_configs', ['start_block', 'end_block'], unique=False)
    op.create_index('idx_pool_pricing_model_contract', 'pool_pricing_configs', ['model_id', 'contract_id'], unique=False)
    op.create_index('idx_pool_pricing_pricing_pool', 'pool_pricing_configs', ['model_id', 'pricing_pool', 'start_block', 'end_block'], unique=False)
    op.create_index('idx_pool_pricing_strategy', 'pool_pricing_configs', ['pricing_strategy'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_pool_pricing_strategy', table_name='pool_pricing_configs')
    op.drop_index('idx_pool_pricing_pricing_pool', table_name='pool_pricing_configs')
    op.drop_index('idx_pool_pricing_model_contract', table_name='pool_pricing_configs')
    op.drop_index('idx_pool_pricing_blocks', table_name='pool_pricing_configs')
    op.drop_table('pool_pricing_configs')
    op.drop_index('idx_model_tokens_token_id', table_name='model_tokens')
    op.drop_index('idx_model_tokens_model_id', table_name='model_tokens')
    op.drop_table('model_tokens')
    op.drop_index('idx_model_sources_source_id', table_name='model_sources')
    op.drop_index('idx_model_sources_model_id', table_name='model_sources')
    op.drop_table('model_sources')
    op.drop_index('idx_model_contracts_model_id', table_name='model_contracts')
    op.drop_index('idx_model_contracts_contract_id', table_name='model_contracts')
    op.drop_table('model_contracts')
    op.drop_index(op.f('ix_tokens_address'), table_name='tokens')
    op.drop_index('idx_tokens_type', table_name='tokens')
    op.drop_index('idx_tokens_symbol', table_name='tokens')
    op.drop_index('idx_tokens_status', table_name='tokens')
    op.drop_index('idx_tokens_project', table_name='tokens')
    op.drop_index('idx_tokens_address', table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_sources_name'), table_name='sources')
    op.drop_index('idx_sources_status', table_name='sources')
    op.drop_index('idx_sources_name', table_name='sources')
    op.drop_table('sources')
    op.drop_index('idx_price_vwap_time_desc', table_name='price_vwap', postgresql_using='btree', postgresql_ops={'time': 'DESC'})
    op.drop_index('idx_price_vwap_time', table_name='price_vwap')
    op.drop_index('idx_price_vwap_asset_time', table_name='price_vwap')
    op.drop_index('idx_price_vwap_asset', table_name='price_vwap')
    op.drop_table('price_vwap')
    op.drop_index(op.f('ix_periods_time_close'), table_name='periods')
    op.drop_index(op.f('ix_periods_block_open'), table_name='periods')
    op.drop_index(op.f('ix_periods_block_close'), table_name='periods')
    op.drop_index('idx_periods_type_time', table_name='periods')
    op.drop_index('idx_periods_complete', table_name='periods')
    op.drop_index('idx_periods_blocks', table_name='periods')
    op.drop_table('periods')
    op.drop_index('idx_models_version', table_name='models')
    op.drop_index('idx_models_status', table_name='models')
    op.drop_index('idx_models_name', table_name='models')
    op.drop_table('models')
    op.drop_index(op.f('ix_contracts_address'), table_name='contracts')
    op.drop_index('idx_contracts_type', table_name='contracts')
    op.drop_index('idx_contracts_status', table_name='contracts')
    op.drop_index('idx_contracts_project', table_name='contracts')
    op.drop_index('idx_contracts_pricing_strategy', table_name='contracts')
    op.drop_index('idx_contracts_address', table_name='contracts')
    op.drop_table('contracts')
    op.drop_index(op.f('ix_block_prices_timestamp'), table_name='block_prices')
    op.drop_index('idx_block_prices_timestamp', table_name='block_prices')
    op.drop_index('idx_block_prices_price', table_name='block_prices')
    op.drop_table('block_prices')
    op.drop_index(op.f('ix_addresses_address'), table_name='addresses')
    op.drop_index('idx_addresses_type', table_name='addresses')
    op.drop_index('idx_addresses_status', table_name='addresses')
    op.drop_index('idx_addresses_address', table_name='addresses')
    op.drop_table('addresses')
    # ### end Alembic commands ###
